<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEDAwMFBQUG
        BgYHBwcICAgJCQkKCgoKCgoKCgoLCwsKCgoLCwsLCwsLCwsLCwsLCwsMDAwMDQ0NDQ0NDg4ODg4ODg4N
        Dg4NDg4NDQ0MDAwLCwsLCwsKCgoKCgoKCgoKCgoKCgoKCgoLCwsKCgoKCgoKCgoJCQkICAgICAgHBwcG
        BgYFBQUDAwMDAwMAAAALCwspKSk5OTlISEhVVVVfX19nZ2dtbW1wcHBxcXFxcXFwcHBxcXFycnJzc3N0
        dXV3eHh6e3t+gICChISGiIiHiomHiomGiYiBhoV8gYB3fHtydnZtcnFrbm1pa2tpa2trbGxubm5vb29u
        bm5sbGxpaWllZWVhYWFaWlpSUlJKSkpBQUE3NzcrKysfHx8BAQESEhJERERZWVlra2t8fHyIiIiPj4+V
        lZWYmJibm5uXl5eVlZWUlJSUlZWWl5eZmZmcnJyfoKCjpaWnqamprayprq2nraylqqqepaWZn6CVm5uR
        lpeOk5OMkZGMkI+NkI+QkZGSkpKSkpKOj4+Li4uIiIiEhIR/f394eHhwcHBpaWlfX19SUlJDQ0MxMTEB
        AQEZGRldXV13d3eMjIycnJynp6etra2wsLCxsbGysrKvr6+sra2qq6usrKyurq6xsrKztbW4u7u9wcHC
        xsbEycjByMi+xsa4w8Oyvr6turqptrWnsrKmsLCosLCrsbGtsrGvsrKxsrKwsLCsrKympqagoKCam5uW
        lpaQkJCLi4uHh4d/f39vb29bW1tFRUUCAgIcHBxlZWWCgoKampqUlJSBgYGIiIiJiYmIiIiHh4eHh4eH
        iIiGhoaHh4eJioqLjY2PkpKUmJeYnJyan5+boqKZoaGXoaGUoJ+Qnp6OnZ2MmpqLmZiMl5eOl5eRl5eT
        mJeUmJeVmJeUlpaRkpKNjY2IiYmDhIR/gIB7e3t6enp5eXmJiYmHh4dvb29WVlYDAwMcHBxkZGSDg4Oe
        np5dXl4hPTxUpaVm0NBgxLRar4RWuYhTwY1RxpBRxpFSxpFSxpFSxpJTxpJTx5lOzrpNzrpNzbpNzbpW
        x6dWxqVWxqVVxqVVxqRWxqRXxqRXxqVQzKhGr4g0flI2g1Y4pWQ1pWIzpWEzpGAxpGAvnFofWzYPJRdV
        VlaTk5N9fX1jY2MDAwMeHh5paWmIiIihoaFfYGBAhIIxW1JMiIFmzbFr16Vm36Ri66tg765h8K9i8K9j
        77Bj8LFk8LJj8bpd+eNd+eJd+eJc+eJn8s1o8clo8slo8shn8shn8sho8chp8chh98tb675AnWc+nGVF
        u3Y+yXc9yXU5w3EriVAqVTckYzske0dXWViampqHh4dtbW0DAwMgICBvb2+MjIyhoaFfYGBRqKVn2dY3
        cWg6X0lIi25f1Z5g7Ktf7q1f769h77Bj77Fj77Fk77Ji8bxc+eJc+eNc+eNc+eNm9M9o8slo8slo8slo
        8slo8slo8clo8chj88ld9MlJuYU9nWZBpms9x3ctkVUsXzswWzskgUkyt2cpiE9aXFuio6OPj490dHQE
        BAQhISFycnKOjo6hoaFeX19QqKRy8Otl3dQ9fV85ZEc6ZU1Ho3le6qtg7q9h77Bi77Fj77Jj8LJi8r1c
        +uNc+eRc+eRc+eRm9NJq8clp8slo8slo8slo8slo8clp8chn8chd9stU3q49nGYweU4uYUA5ZUIsYz4s
        pV0usmM4v28ph09cXl2lpaWVlZV6enoEBAQiIiJ1dXWQkJCgoKBdXl5Pp6Rx7+pr49BYvItKo3w1Y0ZA
        aks7bFFOuYlh8LFj8LJj8LNk8LNj8rxd+uNd+eRe+uVd+eRl9dRq8clq8spr8spq8spq8spq8spq8clp
        8Mhi9ctLxKEuXUE7ZEQ6Y0MseEs2v3Ats2Q4v285wHAqiFBfYWCnqKiZmZl/f38EBAQkJCR4eHiRkZGg
        oKBdXl5Pp6Nw7+lp3sVhx5RXy5VWx5Yza01BbUs/Zkk+eVxVzJlk8LNl8LNk8rle+eNe+eRf+uRe+uRl
        9tlr8clr8spq8spq8spq8spr8cpr8cpazKo9fGM+ZUlCbks0W0AyeVFCvncwtmg5wXE6wXE7wXEriFBi
        ZGOrq6udnZ2Cg4MEBAQlJSV7e3uSkpKgoKBeX19Pp6Nw7+lo2bljy5dd05pa2qFd5Ks3fFw/aklDb0w/
        ZEpEiWle3KVl8bdf+uJf+uNf+uNf+uJk+N5t8cls8cps8clr8clr8clf1LFAhGs9ZElFbk1DbEw4dl09
        l2g/nmk3mWA9wnU8xHY8w3Q8w3MsiVJmaGevsLCgoKCFhoYEBAQmJiZ8fX2TlJShoaFgYGBPp6Nw7+po
        1K5kzZpi2qJc3aNZ5Kha5Kk6kGk4YkM/aEdAaEc6XkVDk3BW6NBY8NlZ8NlY8dpa8Nhl6cJl6MBk6MBe
        1rI/hm02XUNAaUdAaEc7YUU8j3RX6sFMyJg2kVs6lmJFuHc+xng9xXY+xXctiVNrbGy0tLSjpKSIiYkE
        BAQmJiZ9fn6UlZWioqJiYmJPp6Nw7+ln0KRm0Z1k3KVi561Q2Jta5Kdb5KhJs4UwXkE+Z0U+Z0U+ZEU2
        YU0/p5ZW7NZX7tdX7thi6MNd2bM8iW81XkU+ZkU+Z0U+Z0UzX0dRuZli5r5Z7MJT5rs5mGdBnWpDomxC
        xXs/xnk/xnguilRvcXC4uLinp6eKjIwFBQUmJiZ+fn6VlZWjo6NjZWVQp6Rx7+lo0aRn059m3qdl6a1S
        2p1l8LNl8LNl8LNa1p83blBEbUxFbkxHb0xGakw+c2BRx7Vf8dtIoIo5Y0tFbk1FbktFbkxBaks9e2Nl
        4Lts8spt8spo9cxe88lJxZdCnWtAnGlGtndAx3k/xngtilRzdXS8vLyqqqqOj48FBQUmJiZ9fn6VlZWj
        pKRlZ2dQqKRy8Ohp0KFo1KJn36hm6a5T2p5l8bNl8LRl8LRm8LNi5609g2FBaUlHb01Hb0xHb0xEZks4
        Y05HbU1Ib01Gbk1Gbk07ZUlKoYVr78ht8cps8spt8cps8spf88lT5LpHqXhBnWpCoGtFxXxAx3ktilRz
        d3a8vb2sra2RkZEFBQUlJSV8fHyUlJSjpqVnampRqKVz7+Zq0KBp1qNo4Klm6a5T2p5l8LRl8LRm8bRm
        8LNn8LRo8LRKonk9ZUhHbkxIbkxJbk1Jbk1Jb01Ib01Gbk05alJbyaht8cpr8clr8sps8spt8spt8slk
        8MdV575X1KVCnWpAnGlHrXNCx3suilV1eXi9wMCusLCUlJQFBQUkJCR5enqSk5Ojp6ZobGxRqKVy7uRq
        0KBq16Rp4Klm6q9T2p5l8bNl8bRm8LNm8LNo8bNo8bRr8LVWw5g6aFJKbk5Lbk5Lbk5Kbk5Ea0w9fmZp
        5sFt8sls8sps8spq8sps8spt8spt8spo7cVW571i9MlKq3lCnWpAm2dHvHktilR3e3u+w8Kxs7OWlpYF
        BQUiIyN1dnaPkJCip6Zqbm1RqKZy7eBq0KFr2KVp4Kln6q9U2p5l8bRl8bRm8LNn8bNn8bNo8bRr8LVR
        tYtAZk5Kbk1MbkxLbkxLbk5Ibk45alFcyqlt8cps8spr8spq8spr8sps8spt8spp7MRa5btj981a3K1E
        nmtAnGdDoWoxiFZ4fX28wsGwsrKWl5cFBQUhISFwcnKJjIucoaFna2tQqKZy7eNq0KFs16Vp4Kpo6a9U
        2p5m8bRm8LNn8LNn8bNo8bRo77NImXRCZkpJbk5Lbk5LbkxLbk5Lbk5Kbk5Hb007ZElNp4pr8Mlr8clq
        8spr8sps8cpt8cpp7MRg4rpl9s1j9sxPuolBnGg/mmUwc0x6f367wL+vsbGXl5cFBQUgICBsbm6FiIeY
        nZ1kamlQqKZy7+Nr0aFs16Vp4Kpp6K9U2p5m8LRm8LNn8LNn8bNj560/gGBEakpHb0xIbk1Lbk4/Zko8
        c2FEZExJbk5Hb01Gb0xAaUo+g2pm58Bp8slq8spr8spt8cpp7MRg4blq88pj9sxf7MFEoGw+mmUsakZ8
        gYG+w8KusbCXmJgFBQUeHx9oamqBhISUmpljaWlPqKZy7+Rr0aNs16Vq4app561U255m8bRm8LNm8LNb
        16E7b1JFbk1Hb0xGbkxDa0s2b1xRxbNn+uNX1ME/fGtDZ0tFb0xFbk1Dbk04bFRa0K1p8spr8cls8spp
        7MRg4bhu8Mhm9cti9sxUzZ0/mmUrakV9gYG9wsGtsLCWl5cFBQUdHR1lZ2d+gYGSl5diaGhPp6Zy7+Vr
        0aFs1qRp4Klp5axU2p5m8LRl8LNTwJA8Z0xFbkxFb0xFbkw2ZEdIpHxi9t1j+uNj+uRj+uNi+uNNwrA9
        b1pDa0xEbk1Dbk06ZEpNrZBq8cls8cpp7MRf4bhv8Mhs8shj9ctf8cZGrHgraUV8gIG7wL+rr66VlpYF
        BQUcHBxiY2N7fn6Ok5NgZmZPp6Vy7+dr0aNs1aNq4Klq46xU251m8LNJpXw+ZUlFbkxFbkw6Y0Y/jGhh
        4ahn8LNj99Zh+uNh+uNi++Rh++Ng++Nm8tBNqY07Z1BDbU1Dbk0/aEpCiHBp6cNp7MRg4bhu8Mht78dn
        9Mpf9MpX3rAsakZ5fn62u7qprKySlJQFBQUbGxteX192enmKj49fZGNOp6Vz8epq0qZs06Jq4Klq4qtU
        1ZpAiWdCaEpFbk0/Z0k6eVhXzppm8LRm8bNm8bNj9clg+uNg+uRf+uRf+uNe+uNh991p8clk6MFGmX86
        Y0tEbk1DbUw9b1lbzqtg4Llu8Mhu8Mdr8Mdg9Mld88c4jm13fX2wtbWlqamQkpIFBQUZGRlaW1tzdnaG
        i4pcYWFNpqNy8etq1Klr0qFq3qlj0J4xZklFbE1FbUw5aU1OtYdm8LNm8LNl8bRl8LNl8LNk8rxe+uJe
        +uJd+uJd+eNc+eJc+eFm8s1n8cln8chg3bhEiXE+Y0lFbk07YklKp4lu8Mht8Mds7sZk8cZd8sc+o4V1
        fHytsrKjp6aOj48FBQUYGBhWWFhwcnKDh4ZaXl5NpqJx8exq1q5r0KFbuo07ZUo5YD89ZElHnHVl6q9m
        8LRl8LNl8LNl77Nk77Nk8LNk8LRd+Nxc+eJb+eJb+eJa+eJa+eNh9tVn8sho8clq8clr8chdz61CfGVA
        Y0c5Wz9IjXRr6sJt7sZp7cRf8cU+o4Z1enuqr6+ipKSMjY0FBQUYGBhVV1dwcXGChYVYXFtMpaFw8Otq
        2LNQmnY7YUU/Y0g1dVVg3KZo8bRo8LNn8LNm8LNl8LNl8LNk8LNk77Jj8LJe9tBb+eJa+eNa+eRa+uNZ
        +eNc+N9o8clp8chq8clr8sds8clt8clVups2ZE5FZ0tAcVpi1bFp7MNk7cM+ooV1enqorayho6OMjY0F
        BQUZGRlaWlpzdHSDhYVZXFxLpKFu7elGjHo5XEI+bVJZuY1Y0plp8bRp8bRp8LNn8LNm8LNl8LNk8LNk
        77Jk77Jj77Nh8sBb+eJZ+eFZ+eNZ+eNa+eNa+eNm9NFq8chr8Mls8sht8slu8cpp7MRf3rZSq44/Z1A+
        YktTtJVn68FBn4J0eXinq6qhoqKLjIwFBQUbGxtiYmJ8fHyKi4tdX19HmZY8eG81WkdOlXJq1KFq4KhZ
        zpdp8bRp8bRp77Nn8LNn8LNl8LNl77Jk77Jk77Jk77Jj8LRc+Ntb+eFa+eJa+eJb+eJc+eJg+Nxr8cls
        8cht8slu8spu8slp7MRg4Lhu78dq5r9KmX42VkREjXRBmH1ydnWlp6egoKCJiooFBQUcHBxoaGiEhISS
        kpJiY2MjQT1GjYdm28xlyJdnzpxm2qRWxpBm6q9m67Bm6q5k6a5k6a5j6a5i6a5i6a5i6a5i6a1h6K1d
        7cRZ8ttZ8tpZ8tpZ8tpb8tpc8dpm68lp6sJq6cJq6cJq6cJl5L1d17Fq58Bp5r9m47xc0aw9fmcfOjFu
        cnGfoaGcnJyDhIQEBAQbGxtkZGSDg4OWlpZ+f38mPTpNf3lOgHlPf3ZQfGpTgW4zWUlTjHlVjHlUiXJU
        inNUjHRTjXRTjndSkYFSkYFSkoFSkoFVkX5UlYVUloZVlodVl4hWloZXloVXl4RXl4RShXBThG9VjHRT
        jnMzW0hfkXpdj3dZjHRVinBSiG0pPzWEhoaWl5eOjo55eXkEBAQXFxdZWVl5eXmRkZGXl5diZmZspJuO
        18yR29GT3MmY3MBel3+l9Nuq9t6q8teq8taq9Nip9tep9tmm+uul+uyl+uyl+eyq9+Kq9uKp9+Sp9+Sq
        9+Sq9uSr9+Oo+OOm9N2d1Lue1byi5sSe5L9WkXGa3ruU2rWN06yHzqZfknVqbWyWmJiPkJCEhYVxcXEE
        BAQTExNLS0tqamqBgoKPkJCVlZVOW1l+wbeP2c2R4dST2L5aknqg8dqk9t2m8NSn8dSn89Sn9dWn9dal
        +Oek+euk+eul+eur9uGr9+Gp9+Sq9uSp9uOp9uKp9uKm+OKh59Ca07id2r6d5sGZ471UkG6T27WO16+J
        z6hysY1UWleYmpqQkZGIiIh9fn5oaGgDAwMPDw89PT1cXFx1dXWGh4eRkZGPj49IYV2I0cWN3tKP3MpX
        jHWb79ef9tyh7c+j78+j8dGk89Ok9NOj9uCi+Omi+Omj+Omo9t+o9t+o9uKn9uGn9+Gn9uGm9+Gj+OCa
        3MCX0rWZ4b6X5L6T4LlQjmuM16+H06p+xJxGV06YmZmTlJSIiYl+fn50dHRfX18DAwMLCwsvLy9LS0tm
        ZmZ7e3uIiYmRkZGBg4JOeHKJ286M3tFVjXuX7NWb89qc68ud7Mue7s2f8tCg8tGg9Nif9+Wf+OWg9+al
        9N2l9Nyl9+Ck9uGk9+Gj9uCh9+Cd9NqR0rSS1LWS47qR47mM3rRNjGmE0qiAz6VHaFaMjY2Xl5eLi4t/
        f39ycnJnZ2dSUlICAgIHBwchISE4ODhSUlJpaWl8fHyJioqRkpJscG9em5KI3M5WlIyU6tSX8NiX6ceZ
        6seb7cma8Myb8cyc8tCa9uGb9uGc9+Kg89mh89ih9t6g9t+g9t6e9t6b996V6MuMz7CN2rSL4raK4bWF
        3bFKi2d/z6RUiWx2d3eYmJiOjo6BgYFycnJjY2NWVlZDQ0MCAgIEBAQVFRUnJyc8PDxUVFRqamp9fX2J
        ioqPj49VXl1wu65Vl5GS7uGV7deW5cSX6MOY7MWY78iY8MmZ8MqX9NyX9d6Y9d6c8tad8dSc9dyb9d2a
        9dya9dyV992N3LuIz62J37SH4rSG4rOB3K5Ji2ZlqoVcYl+ampqQkJCDg4N0dHRiYmJRUVFCQkIxMTEB
        AQECAgIMDAwYGBgpKSk9PT1UVFRqamp8fHyFhoaIiYlHXFlMi4eU9vOV7NmV4sGW5cCX6sOX7sWW78aW
        8MaU89aU9NqU9NqY8tKa8c+Z9NqY9duX9duW9duR99uH0q6H066F4bOE4bKE4LF/2qxAf1tIWVCZmpqS
        kpKFhYV1dXVjY2NRUVE/Pz8vLy8hISEBAQEBAQEGBgYODg4aGhoqKio9PT1TU1NnZ2d1dnaAgICDhYU1
        UVFcm5pdl49cjXdckHdclHpcl3tcmXtcmXxbm4VbnYxbnYxfnIdgnIVgnotgn41fn41eoI5anYlTg2tV
        jG9UknJTknFUknJSj28nPjCRkpKVlZWIiIh2dnZkZGRRUVE/Pz8uLi4gICAVFRUAAAAAAAADAwMHBwcP
        Dw8cHBwrKys9PT1OTk5eXl5vb2+Cg4OIiYmIiYmMjY2RkpKUlJSUlZWUlZaVlpaWmJiWmZiWmZmXmpqX
        mpqYm5qYmpqYmZqXmZmWl5eVlpaTlJSRkZKPj4+MjY2MjY2MjY2Sk5OSkpKHh4d2dnZiYmJPT089PT0t
        LS0gICAVFRUNDQ0AAAAAAAABAQEEBAQJCQkQEBAbGxspKSk3NzdGRkZWVlZoaGh7e3uEhISJioqNjY2O
        jo6Ojo6Pj4+QkJCSkpKTlJSVlpaYmJiZmpqam5uam5uam5uampqZmZmXl5eUlJSRkZGOjo6LjIyJioqI
        iIiEhIR8fHxubm5dXV1KSko5OTkqKioeHh4UFBQMDAwHBwcAAAAAAAAAAAABAQEEBAQJCQkQEBAZGRkk
        JCQxMTE+Pj5MTExcXFxoaGhwcHBzc3Nzc3Nzc3Nzc3N0dXV3d3d6enp8fHx/f3+AgoKCg4ODhISDhISD
        g4OCgoJ/gIB8fHx5eXl1dXVxcXFubm5qamplZWVcXFxPT09AQEAxMTEkJCQaGhoREREKCgoGBgYEBAQA
        AAAAAAAAAAAAAAACAgIEBAQJCQkPDw8WFhYfHx8oKCgzMzM+Pj5ISEhOTk5RUVFRUVFQUFBSUlJTU1NW
        VlZZWVlcXFxfX19jY2NkZGRmZmZmZmZlZWVjY2NhYWFeXl5aWlpWVlZRUVFNTU1ISEhCQkI6OjowMDAm
        JiYcHBwUFBQODg4ICAgFBQUDAwMBAQEAAAAAAAAAAAAAAAAAAAACAgIEBAQHBwcMDAwSEhIYGBgfHx8m
        JiYsLCwwMDAxMTEyMjIxMTEyMjI0NDQ2NjY5OTk8PDw/Pz9CQkJERERFRUVFRUVFRUVDQ0NBQUE+Pj46
        Ojo2NjYzMzMuLi4qKiomJiYgICAaGhoUFBQODg4JCQkGBgYEBAQCAgIBAQEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAQEDAwMGBgYICAgMDAwQEBAUFBQYGBgaGhobGxsbGxsbGxscHBwdHR0fHx8iIiIkJCQlJSUo
        KCgpKSkqKioqKioqKiopKSknJyclJSUjIyMfHx8cHBwZGRkWFhYSEhIPDw8LCwsICAgFBQUEBAQCAgIB
        AQEAAAAAAAAAAAAAAAAAAAAAAACnxgAAAAAAAKfGAAAAAAAAp8YAAAAAAACnxgAAAAAAAKfGAAAAAAAA
        p8YAAAAAAACnxgAAAAAAAKfGAAAAAAAAp8YAAAAAAACnxgAAAAAAAKfGAAAAAAAAp8YAAAAAAACnxgAA
        AAAAAKfGAAAAAAAAp8YAAAAAAACnxgAAAAAAAKfGAAAAAAAAp8YAAAAAAACnxgAAAAAAAKfGAAAAAAAA
        p8YAAAAAAACnxgAAAAAAAKfGAAAAAAAAp8YAAAAAAACnxgAAAAAAAKfGAAAAAAAAp8YAAAAAAACnxgAA
        AAAAAKfGAAAAAAAAp8YAAAAAAACnxgAAAAAAAKfGAAAAAAAAp8YAAAAAAACnxgAAAAAAAKfGAAAAAAAA
        p8YAAAAAAACnxgAAAAAAAKfGAAAAAAAAp8YAAAAAAACnxgAAAAAAAKfGAAAAAAAAp8YAAAAAAACnxgAA
        AAAAAKfGAAAAAAAAp8YAAAAAAACnxgAAAAAAAKfGAAAAAAAAp8Y=
</value>
  </data>
</root>